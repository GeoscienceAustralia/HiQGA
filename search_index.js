var documenterSearchIndex = {"docs":
[{"location":"#HiQGA-Documentation","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"","category":"section"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"This is a general purpose package for spatial statistical inference, geophysical forward modeling, Bayesian inference and inversion (both determinstic and probabilistic).","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"Readily usable geophysical forward operators are to do with AEM, CSEM and MT physics (references underneath), for which the time domain AEM codes are fairly production-ready. The current EM modeling is in 1D, but the inversion framework is dimensionally agnostic (e.g., you can regress images). Adding your own geophysical operators is easy, keep reading down here.","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"This package implements both the nested (2-layer) and vanilla trans-dimensional Gaussian process algorithm as published in ","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"Bayesian inversion using nested trans-dimensional Gaussian processes, A. Ray, Geophysical Journal International, 226(1), 2021.\nBayesian geophysical inversion with trans-dimensional Gaussian process machine learning, A. Ray and D. Myer, Geophysical Journal International 217(3), 2019.\nThere is also a flavour of within-bounds Gauss-Newton/Occam's inversion implemented. For SkyTEM AEM, this is fully functional, but for other forward propagators you will have to provide a Jacobian (the linearization of the forward operator).","category":"page"},{"location":"#Installation","page":"HiQGA Documentation","title":"Installation","text":"","category":"section"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"To install, in a perfect world we'd use Julia's Pkg REPL by hitting ] to enter pkg> mode. Then enter the following, at the pkg> prompt:","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"pkg> add https://github.com/GeoscienceAustralia/HiQGA.jl.git","category":"page"},{"location":"#Usage","page":"HiQGA Documentation","title":"Usage","text":"","category":"section"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"Examples of how to use the package can be found in the examples directory. Simply cd to the relevant example directory and include the .jl files in the order they are named. If using VSCode make sure to do Julia: Change to this Directory from the three dots menu on the top right. The Markov Chain Monte Carlo sampler is configured to support parallel tempering on multiple CPUs - some of the examples accomplish this with Julia's built-in multiprocessing, and others use MPI in order to support inversions on HPC clusters that don't work with Julia's default SSH-based multiprocessing. The MPI examples require MPI.jl and MPIClusterManagers.jl, which are not installed as dependencies for this package, so you will need to ensure they are installed and configured correctly to run these examples. Please note that MPIClusterManagers.jl has issues with Julia <1.4.2, so please ensure you are using an up-to-date Julia version. ","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"Some example scripts have as a dependency Revise.jl as we're still actively developing this package, so you may need to install Revise if not already installed. All Julia users should be developing with Revise! After installation, to run the examples, simply clone the package separately (or download as a ZIP), navigate to the examples folder and run the scripts in their numerical order.","category":"page"},{"location":"#Updating-the-package","page":"HiQGA Documentation","title":"Updating the package","text":"","category":"section"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"pkg> update HiQGA","category":"page"},{"location":"#Developing-HiQGA-or-modifying-it-for-your-own-special-forward-physics","page":"HiQGA Documentation","title":"Developing HiQGA or modifying it for your own special forward physics","text":"","category":"section"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"After you have ]added HiQGA you can simply do: ","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"pkg>dev HiQGA","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"If you haven't added it already, you can do:","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"pkg>dev https://github.com/GeoscienceAustralia/HiQGA.jl.git","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"It will download to your JULIA_PKG_DEVDIR. ","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"Another way is to simply clone or download this repository to your JULIA_PKG_DEVDIR, rename the cloned directory HiQGA removing the .jl bit and do","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"pkg>dev HiQGA","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"Here's a gist on adding your own module if you want to modify the source code. Alternatively, if you only want to use the sampling methods in HiQGA.transD_GP without contributing to the source (boo! j/k) here's another gist which is more appropriate. These gists were written originally for a package called transD_GP so you will have to modify using transD_GP to using HiQGA.transD_GP. Documentation is important and we're working on improving it before a full-release. ","category":"page"},{"location":"#Development-setup-on-NCI","page":"HiQGA Documentation","title":"Development setup on NCI","text":"","category":"section"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"The preferred development and usage environment for HiQGA is Visual Studio Code, which provides interactive execution of Julia code through the VSCode Julia extension. To install VSCode on the National Computational Infrastructure (NCI), you need to extract the VSCode rpm package using the steps in this gist, to a location where your account has write access.","category":"page"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"It is also useful to use Revise.jl to ensure changes to the package are immediately reflected in a running Julia REPL (this is the reason that Revise is a dependency on some example scripts as noted above). More information on a workflow to use Revise during development can be found here.","category":"page"},{"location":"#References-for-AEM-and-CSEM-physics","page":"HiQGA Documentation","title":"References for AEM and CSEM physics","text":"","category":"section"},{"location":"","page":"HiQGA Documentation","title":"HiQGA Documentation","text":"Blatter, D., Key, K., Ray, A., Foley, N., Tulaczyk, S., & Auken, E. (2018). Trans-dimensional Bayesian inversion of airborne transient EM data from Taylor Glacier, Antarctica. Geophysical Journal International, 214(3)\nRay, A., & Key, K. (2012). Bayesian inversion of marine CSEM data with a trans-dimensional self parametrizing algorithm. Geophysical Journal International, 191(3), 1135-1151.","category":"page"}]
}
